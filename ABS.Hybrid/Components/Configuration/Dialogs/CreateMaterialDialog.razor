@using Shared.DataTransferObjects
@implements IDialogContentComponent<MaterialForCreationDto>

<!-- Header -->
<FluentDialogHeader ShowDismiss="true">
    <FluentStack VerticalAlignment="VerticalAlignment.Center">
        <FluentIcon Value="@(new Icons.Regular.Size24.WindowApps())" />
        <FluentLabel Typo="Typography.PaneHeader">
            @Dialog.Instance.Parameters.Title
        </FluentLabel>
    </FluentStack>
</FluentDialogHeader>

<!-- Body -->
<FluentDialogBody>
    <EditForm EditContext="_editContext">
        <DataAnnotationsValidator />

        <FluentStack Orientation="Orientation.Vertical">
            <div>
                <FluentNumberField @bind-Value="Content.MaterialNumber" Label="Material Number" Required AutoComplete="off" />
                <FluentValidationMessage For="@(() => Content.MaterialNumber)" />
            </div>

            <div>
                <FluentTextField @bind-Value="Content.Name" Label="Name" Required AutoComplete="off" />
                <FluentValidationMessage For="@(() => Content.Name)" />
            </div>
            <div style="color: var(--error);">
                <FluentValidationSummary />
            </div>
        </FluentStack>
    </EditForm>
</FluentDialogBody>

@* Footer *@
<FluentDialogFooter>
    <FluentButton Appearance="Appearance.Accent" OnClick="@SaveAsync">Save</FluentButton>
    <FluentButton Appearance="Appearance.Neutral" OnClick="@CancelAsync">Cancel</FluentButton>
</FluentDialogFooter>


@code {
    [Parameter]
    public MaterialForCreationDto Content { get; set; } = default!;

    [CascadingParameter]
    public FluentDialog Dialog { get; set; } = default!;

    private EditContext _editContext = default!;

    protected override void OnInitialized()
    {
        _editContext = new EditContext(Content);
    }

    private async Task SaveAsync()
    {
        if (_editContext.Validate())
        {
            await Dialog.CloseAsync(Content);
        }
    }

    private async Task CancelAsync()
    {
        await Dialog.CancelAsync();
    }
}
