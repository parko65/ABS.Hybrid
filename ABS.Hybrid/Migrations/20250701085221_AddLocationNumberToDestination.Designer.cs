// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace ABS.Hybrid.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20250701085221_AddLocationNumberToDestination")]
    partial class AddLocationNumberToDestination
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.Destination", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DestinationId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DestinationType")
                        .HasColumnType("int");

                    b.Property<int>("LocationNumber")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Destinations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DestinationType = 1,
                            LocationNumber = 0,
                            Name = "NK54 USG"
                        },
                        new
                        {
                            Id = 2,
                            DestinationType = 2,
                            LocationNumber = 0,
                            Name = "Bin 1"
                        },
                        new
                        {
                            Id = 3,
                            DestinationType = 2,
                            LocationNumber = 0,
                            Name = "Bin 2"
                        },
                        new
                        {
                            Id = 4,
                            DestinationType = 1,
                            LocationNumber = 0,
                            Name = "NK71 YMH"
                        });
                });

            modelBuilder.Entity("Entities.Models.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("JobId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DestinationId")
                        .HasColumnType("int");

                    b.Property<int>("JobNumber")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("Tonnage")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("DestinationId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("Entities.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaterialId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MaterialNumber")
                        .HasColumnType("int");

                    b.Property<int>("MaterialTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int?>("StorageUnitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MaterialTypeId");

                    b.HasIndex("StorageUnitId")
                        .IsUnique()
                        .HasFilter("[StorageUnitId] IS NOT NULL");

                    b.ToTable("Materials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaterialNumber = 1,
                            MaterialTypeId = 1,
                            Name = "Dust/Sand"
                        },
                        new
                        {
                            Id = 2,
                            MaterialNumber = 2,
                            MaterialTypeId = 1,
                            Name = "6mm"
                        },
                        new
                        {
                            Id = 3,
                            MaterialNumber = 3,
                            MaterialTypeId = 1,
                            Name = "10mm"
                        },
                        new
                        {
                            Id = 4,
                            MaterialNumber = 4,
                            MaterialTypeId = 1,
                            Name = "14mm"
                        },
                        new
                        {
                            Id = 5,
                            MaterialNumber = 5,
                            MaterialTypeId = 1,
                            Name = "20mm"
                        },
                        new
                        {
                            Id = 6,
                            MaterialNumber = 6,
                            MaterialTypeId = 1,
                            Name = "24mm+"
                        },
                        new
                        {
                            Id = 7,
                            MaterialNumber = 50,
                            MaterialTypeId = 2,
                            Name = "40-60 Pen Bitumen"
                        },
                        new
                        {
                            Id = 8,
                            MaterialNumber = 1001,
                            MaterialTypeId = 2,
                            Name = "Masterflex Binder"
                        });
                });

            modelBuilder.Entity("Entities.Models.MaterialType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MaterialTypeId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("MaterialTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Aggregate"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bitumen"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Filler"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Fixed Additive"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Coldfeed"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Additive"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Reclaimed Asphalt"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Small Dose Additive"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Return Dust"
                        });
                });

            modelBuilder.Entity("Entities.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RecipeId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BatchSize")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsBatchSizeFixed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<int>("LowerTemperatureDeviation")
                        .HasColumnType("int");

                    b.Property<int>("MixTemperature")
                        .HasColumnType("int");

                    b.Property<int>("MixTime")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UpperTemperatureDeviation")
                        .HasColumnType("int");

                    b.Property<int>("VersionNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BatchSize = 0,
                            CreatedDate = new DateTime(2023, 6, 15, 10, 10, 56, 0, DateTimeKind.Unspecified),
                            IsBatchSizeFixed = false,
                            IsValid = false,
                            LowerTemperatureDeviation = 0,
                            MixTemperature = 0,
                            MixTime = 0,
                            Name = "120A104",
                            Title = "AC32 HDM Base 40/60 REC (HYBRID)",
                            UpperTemperatureDeviation = 0,
                            VersionNumber = 0
                        },
                        new
                        {
                            Id = 2,
                            BatchSize = 0,
                            CreatedDate = new DateTime(2024, 3, 21, 13, 15, 23, 0, DateTimeKind.Unspecified),
                            IsBatchSizeFixed = false,
                            IsValid = false,
                            LowerTemperatureDeviation = 0,
                            MixTemperature = 0,
                            MixTime = 0,
                            Name = "120A104D",
                            Title = "AC32 HDM Base 40/60 DES (HYBRID)",
                            UpperTemperatureDeviation = 0,
                            VersionNumber = 0
                        },
                        new
                        {
                            Id = 3,
                            BatchSize = 0,
                            CreatedDate = new DateTime(2024, 3, 21, 8, 15, 29, 0, DateTimeKind.Unspecified),
                            IsBatchSizeFixed = false,
                            IsValid = false,
                            LowerTemperatureDeviation = 0,
                            MixTemperature = 0,
                            MixTime = 0,
                            Name = "120A104Z",
                            Title = "WARM AC32 HDM Base 40/60 REC (HYBRID)",
                            UpperTemperatureDeviation = 0,
                            VersionNumber = 0
                        });
                });

            modelBuilder.Entity("Entities.Models.RecipeStorageUnit", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("StorageUnitId")
                        .HasColumnType("int");

                    b.Property<double>("Take")
                        .HasColumnType("float");

                    b.HasKey("RecipeId", "StorageUnitId");

                    b.HasIndex("StorageUnitId");

                    b.ToTable("RecipeStorageUnits");
                });

            modelBuilder.Entity("Entities.Models.StorageUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StorageUnitId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MaterialTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("MaterialTypeId");

                    b.ToTable("StorageUnits");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MaterialTypeId = 1,
                            Name = "Bin 1"
                        },
                        new
                        {
                            Id = 2,
                            MaterialTypeId = 1,
                            Name = "Bin 2"
                        },
                        new
                        {
                            Id = 3,
                            MaterialTypeId = 1,
                            Name = "Bin 3"
                        },
                        new
                        {
                            Id = 4,
                            MaterialTypeId = 1,
                            Name = "Bin 4"
                        },
                        new
                        {
                            Id = 5,
                            MaterialTypeId = 1,
                            Name = "Bin 5"
                        },
                        new
                        {
                            Id = 6,
                            MaterialTypeId = 1,
                            Name = "Bin 6"
                        },
                        new
                        {
                            Id = 7,
                            MaterialTypeId = 2,
                            Name = "Tank 1"
                        },
                        new
                        {
                            Id = 8,
                            MaterialTypeId = 2,
                            Name = "Tank 2"
                        },
                        new
                        {
                            Id = 9,
                            MaterialTypeId = 3,
                            Name = "Silo 1"
                        },
                        new
                        {
                            Id = 10,
                            MaterialTypeId = 3,
                            Name = "Silo 2"
                        },
                        new
                        {
                            Id = 11,
                            MaterialTypeId = 3,
                            Name = "Silo 3"
                        });
                });

            modelBuilder.Entity("Entities.Models.Job", b =>
                {
                    b.HasOne("Entities.Models.Destination", "Destination")
                        .WithMany("Jobs")
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.Recipe", "Recipe")
                        .WithMany("Jobs")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destination");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Entities.Models.Material", b =>
                {
                    b.HasOne("Entities.Models.MaterialType", "MaterialType")
                        .WithMany("Materials")
                        .HasForeignKey("MaterialTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.StorageUnit", "StorageUnit")
                        .WithOne("Material")
                        .HasForeignKey("Entities.Models.Material", "StorageUnitId");

                    b.Navigation("MaterialType");

                    b.Navigation("StorageUnit");
                });

            modelBuilder.Entity("Entities.Models.RecipeStorageUnit", b =>
                {
                    b.HasOne("Entities.Models.Recipe", "Recipe")
                        .WithMany("RecipeStorageUnits")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.StorageUnit", "StorageUnit")
                        .WithMany("RecipeStorageUnits")
                        .HasForeignKey("StorageUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");

                    b.Navigation("StorageUnit");
                });

            modelBuilder.Entity("Entities.Models.StorageUnit", b =>
                {
                    b.HasOne("Entities.Models.MaterialType", "MaterialType")
                        .WithMany("StorageUnits")
                        .HasForeignKey("MaterialTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaterialType");
                });

            modelBuilder.Entity("Entities.Models.Destination", b =>
                {
                    b.Navigation("Jobs");
                });

            modelBuilder.Entity("Entities.Models.MaterialType", b =>
                {
                    b.Navigation("Materials");

                    b.Navigation("StorageUnits");
                });

            modelBuilder.Entity("Entities.Models.Recipe", b =>
                {
                    b.Navigation("Jobs");

                    b.Navigation("RecipeStorageUnits");
                });

            modelBuilder.Entity("Entities.Models.StorageUnit", b =>
                {
                    b.Navigation("Material");

                    b.Navigation("RecipeStorageUnits");
                });
#pragma warning restore 612, 618
        }
    }
}
